---
description: 
globs: 
alwaysApply: false
---
# HTML Structure Rules for Jayce Restaurant

## Required Meta Tags
```html
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Jayce Restaurant - Experience authentic cuisine in a modern setting">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
```

## Main Sections Structure

### 1. Header
```html
<header class="header">
    <div class="header__container">
        <a href="/" class="header__logo">
            <img src="assets/logo.svg" alt="Jayce Restaurant Logo">
        </a>
        <nav class="header__nav">
            <!-- Navigation items -->
        </nav>
        <button class="header__menu-btn" aria-label="Toggle menu">
            <span class="menu-icon"></span>
        </button>
    </div>
</header>
```

### 2. Hero Section
```html
<section class="hero">
    <div class="hero__content">
        <h1 class="hero__title">Welcome to Jayce Restaurant</h1>
        <p class="hero__subtitle">Experience culinary excellence</p>
        <a href="#menu" class="hero__cta">View Menu</a>
    </div>
</section>
```

### 3. Featured Dishes
```html
<section class="featured">
    <h2 class="featured__title">Our Signature Dishes</h2>
    <div class="featured__grid">
        <!-- Featured dish cards -->
    </div>
</section>
```

### 4. Menu Section
```html
<section class="menu" id="menu">
    <h2 class="menu__title">Our Menu</h2>
    <div class="menu__categories">
        <!-- Menu category tabs -->
    </div>
    <div class="menu__items">
        <!-- Menu items grid -->
    </div>
</section>
```

### 5. About Section
```html
<section class="about">
    <div class="about__content">
        <h2 class="about__title">Our Story</h2>
        <!-- About content -->
    </div>
</section>
```

### 6. Footer
```html
<footer class="footer">
    <div class="footer__container">
        <!-- Footer content -->
    </div>
</footer>
```

## Required Classes and Naming Convention
- Use BEM methodology (Block__Element--Modifier)
- Container classes: `container`, `section`
- Utility classes: `hidden`, `visible`, `active`
- Responsive classes: `mobile-only`, `desktop-only`

## Semantic Elements Usage
- `<header>` for page header
- `<nav>` for navigation
- `<main>` for main content
- `<section>` for content sections
- `<article>` for individual menu items
- `<aside>` for supplementary content
- `<footer>` for page footer

## Accessibility Requirements
1. ARIA Labels
   - Navigation landmarks
   - Form controls
   - Interactive elements
   - Modal dialogs

2. Semantic Structure
   - Proper heading hierarchy (h1-h6)
   - Descriptive link text
   - Alt text for images
   - Form labels and instructions

3. Interactive Elements
   - Focus states
   - Keyboard navigation
   - Skip links
   - ARIA roles where needed

## Performance Considerations
1. Image Optimization
   - Use appropriate image formats
   - Implement lazy loading
   - Provide srcset for responsive images
   - Use descriptive alt text

2. Script Loading
   - Defer non-critical scripts
   - Use async where appropriate
   - Minimize inline scripts
   - Implement proper event handling

3. Content Structure
   - Minimize DOM depth
   - Use semantic elements
   - Implement proper caching
   - Optimize for Core Web Vitals
